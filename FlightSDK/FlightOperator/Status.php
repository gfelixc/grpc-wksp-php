<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flight_operator.proto

namespace FlightOperator;

use UnexpectedValueException;

/**
 * Protobuf type <code>Status</code>
 */
class Status
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>ON_ROUTE = 1;</code>
     */
    const ON_ROUTE = 1;
    /**
     * Generated from protobuf enum <code>ON_BOARDING = 2;</code>
     */
    const ON_BOARDING = 2;
    /**
     * Generated from protobuf enum <code>DELAYED = 3;</code>
     */
    const DELAYED = 3;
    /**
     * Generated from protobuf enum <code>CANCELED = 4;</code>
     */
    const CANCELED = 4;
    /**
     * Generated from protobuf enum <code>SCHEDULED = 5;</code>
     */
    const SCHEDULED = 5;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::ON_ROUTE => 'ON_ROUTE',
        self::ON_BOARDING => 'ON_BOARDING',
        self::DELAYED => 'DELAYED',
        self::CANCELED => 'CANCELED',
        self::SCHEDULED => 'SCHEDULED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

